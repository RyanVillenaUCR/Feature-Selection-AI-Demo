Hello world!
Welcome to Ryan Villena's Feature Selection Algorithm.
Type in the name of the file to test,
or enter a number to use a built-in data set:
1: Small dataset (all students)
2: Large dataset (all students)
3: Small dataset (Ryan only)
4: Large dataset (Ryan only)
Type the number of the algorithm you want to run:
1: Forward Selection
2: Backward Elimination
Fetching data... done!
The dataset has 10 features,
with 100 instances.
Please wait while I normalize the data... Done!


Using feature [1], accuracy is 0.84
Using feature [2], accuracy is 0.69
Using feature [3], accuracy is 0.63
Using feature [4], accuracy is 0.68
Using feature [5], accuracy is 0.63
Using feature [6], accuracy is 0.65
Using feature [7], accuracy is 0.59
Using feature [8], accuracy is 0.66
Using feature [9], accuracy is 0.69
Feature set [1] was best of this generation,
accuracy was 0.84


Using features [1, 2], accuracy is 0.78
Using features [1, 3], accuracy is 0.8
Using features [1, 4], accuracy is 0.73
Using features [1, 5], accuracy is 0.78
Using features [1, 6], accuracy is 0.94
Using features [1, 7], accuracy is 0.74
Using features [1, 8], accuracy is 0.86
Using features [1, 9], accuracy is 0.73
Feature set [1, 6] was best of this generation,
accuracy was 0.94


Using features [1, 6, 9], accuracy is 0.78
Using features [1, 2, 6], accuracy is 0.91
Using features [1, 3, 6], accuracy is 0.87
Using features [1, 4, 6], accuracy is 0.85
Using features [1, 5, 6], accuracy is 0.88
Using features [1, 6, 7], accuracy is 0.76
Using features [1, 6, 8], accuracy is 0.87
Feature set [1, 2, 6] was best of this generation,
accuracy was 0.91


Using features [1, 2, 6, 7], accuracy is 0.82
Using features [1, 2, 6, 8], accuracy is 0.77
Using features [1, 2, 6, 9], accuracy is 0.8
Using features [1, 2, 3, 6], accuracy is 0.91
Using features [1, 2, 4, 6], accuracy is 0.78
Using features [1, 2, 5, 6], accuracy is 0.84
Feature set [1, 2, 3, 6] was best of this generation,
accuracy was 0.91


Using features [1, 2, 3, 4, 6], accuracy is 0.82
Using features [1, 2, 3, 5, 6], accuracy is 0.81
Using features [1, 2, 3, 6, 7], accuracy is 0.77
Using features [1, 2, 3, 6, 8], accuracy is 0.77
Using features [1, 2, 3, 6, 9], accuracy is 0.81
Feature set [1, 2, 3, 4, 6] was best of this generation,
accuracy was 0.82


Using features [1, 2, 3, 4, 5, 6], accuracy is 0.79
Using features [1, 2, 3, 4, 6, 7], accuracy is 0.65
Using features [1, 2, 3, 4, 6, 8], accuracy is 0.74
Using features [1, 2, 3, 4, 6, 9], accuracy is 0.82
Feature set [1, 2, 3, 4, 6, 9] was best of this generation,
accuracy was 0.82


Using features [1, 2, 3, 4, 6, 7, 9], accuracy is 0.7
Using features [1, 2, 3, 4, 6, 8, 9], accuracy is 0.74
Using features [1, 2, 3, 4, 5, 6, 9], accuracy is 0.74
Feature set [1, 2, 3, 4, 6, 8, 9] was best of this generation,
accuracy was 0.74


Using features [1, 2, 3, 4, 5, 6, 8, 9], accuracy is 0.74
Using features [1, 2, 3, 4, 6, 7, 8, 9], accuracy is 0.66
Feature set [1, 2, 3, 4, 5, 6, 8, 9] was best of this generation,
accuracy was 0.74


Using features [1, 2, 3, 4, 5, 6, 7, 8, 9], accuracy is 0.66
Feature set [1, 2, 3, 4, 5, 6, 7, 8, 9] was best of this generation,
accuracy was 0.66


Finished search!
The best feature subset is [1, 6],
with an accuracy of 0.94
